name: Lint

on:
  push:
  workflow_dispatch:

jobs:
  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install pnpm
        run: npm install -g pnpm
      - name: Install dependencies
        run: pnpm install
        working-directory: frontend
      - name: Run ESLint
        run: pnpm run lint
        working-directory: frontend

  python-lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
    - name: Analysing the code with black
      id: black
      continue-on-error: true
      run: |
        black --check $(git ls-files '*.py') --line-length=120
    - name: Check imports with isort
      id: isort
      continue-on-error: true
      run: |
        isort --check-only --diff $(git ls-files '*.py')
    - name: Run flake8
      id: flake8
      continue-on-error: true
      run: |
        flake8 $(git ls-files '*.py') --max-line-length=120
    - name: Check for failures
      if: always()
      run: |
        failed_checks=()
        if [[ "${{ steps.black.outcome }}" == "failure" ]]; then
          failed_checks+=("black")
        fi
        if [[ "${{ steps.isort.outcome }}" == "failure" ]]; then
          failed_checks+=("isort")
        fi
        if [[ "${{ steps.flake8.outcome }}" == "failure" ]]; then
          failed_checks+=("flake8")
        fi
        if [ ${#failed_checks[@]} -gt 0 ]; then
          echo "The following checks failed: ${failed_checks[*]}"
          exit 1
        fi
